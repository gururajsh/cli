name: Test release version

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version bump'
        required: true
        default: 'patch'
        type: choice
        options:
          - minor
          - patch

permissions:
  contents: write

jobs:
  calculate-new-version:
    runs-on: ubuntu-latest
    env:
      VERSION_MAJOR: 8
      GH_TOKEN: ${{ github.token }}
    steps:
      - name: Checkout cli
        uses: actions/checkout@v4

      - name: Bump version
        id: bumpVersion
        run: |
          set -x
          latest_tag="$(gh release list -L 2 --repo cloudfoundry/cli --exclude-pre-releases --exclude-drafts --json tagName --jq '.[].tagName' | grep v${VERSION_MAJOR})"
          echo "Latest tag is ${latest_tag}"

          version="${latest_tag#[vV]}"

          version_minor="${version#*.}"
          version_minor="${version_minor%.*}"
          version_patch=${version##*.}

          if [ "${{ inputs.release_version }}" == "minor" ]; then
            version_minor=$(($version_minor + 1))
          else
            version_patch=$(($version_patch + 1))
          fi

          new_version="${VERSION_MAJOR}.${version_minor}.${version_patch}"
          echo "new version is ${new_version}"
          echo "new_version=${new_version}" >> $GITHUB_ENV

      # - name: Bump Version
      #   id: bump
      #   uses: cbrgm/semver-bump-action@main
      #   with:
      #     current-version: ${{ env.latest_tag }}
      #     bump-level: ${{ inputs.release_version }}
      #     # prerelease-tag: ${{ github.event.inputs.prerelease-tag }}

      - name: Publish Tag
        run: |
          # new_tag="v${{ steps.bump.outputs.new_version }}"
          new_tag="v${{ env.new_version }}"
          echo "new version is $new_tag"
          git config user.name "GitHub Actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag -am "Bump cli version ${new_tag}" ${new_tag}
          # git push origin $new_tag

      # - name: Setup tmate session
      #   if: always()
      #   uses: mxschmitt/action-tmate@v3
